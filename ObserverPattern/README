# Observer Design Pattern

## Overview
The **Observer Pattern** defines a one-to-many dependency between objects, where a change in one object triggers an update in all its dependents (observers). It is mainly used to implement distributed event handling systems.

## Key Points
- Notifies multiple objects when the subject's state changes.
- Promotes loose coupling between the subject and its observers.
- Used in event-driven programming.

## How to Run
1. Compile the `ObserverPattern.java`.
2. Run the class to observe how changes in the subject notify all observers.

## Example Use Cases
- Event listeners in GUI applications.
- News feeds or social media notifications.
